---
- name: Check source folder {{ sourceFolder }} is already created
  stat: path={{ sourceFolder }}
  register: source_folder_installed

- name: Check repo folder {{ repoFolder }} is already created
  stat: path={{ repoFolder }}
  register: repo_folder_installed

- name: Install packages
  apt:
    name: "{{ packages }}"
  vars:
    packages:
      - unzip
      - autoconf
      - automake
      - libtool
      - autotools-dev
      - dpkg-dev
      - fakeroot
      - dh-make
      - libz-dev
      - apache2
      - reprepro

- name: Install packages on ubuntu bionic
  apt:
    name: "{{ packages }}"
  vars:
    packages:
      - libssl1.0-dev
  when:
    - ansible_distribution|string == 'Ubuntu'
    - ansible_distribution_release|string == 'bionic'

- name: Install packages on ubuntu xenial
  apt:
    name: "{{ packages }}"
  vars:
    packages:
      - libssl-dev
  when:
    - ansible_distribution|string == 'Ubuntu'
    - ansible_distribution_release|string == 'xenial'

- name: Create source folder
  ignore_errors: yes
  file:
    path: "{{ sourceFolder}}"
    state: directory
    mode: "0755"
  when: source_folder_installed.stat.exists == False

- name: Clean source folder
  shell: /bin/rm -rf *
  args:
    chdir: "{{ sourceFolder }}/"
  when: source_folder_installed.stat.exists == True

- name: Clean html folder
  shell: /bin/rm -rf *
  args:
    chdir: "/var/www/html/"

- name: Download source
  get_url:
    url: "{{ urlSource }}/archive/master.zip"
    dest: "{{ sourceFolder }}"
    mode: '0755'

- name: Unzip source
  shell: unzip {{ sourceFolder }}/{{ packageName }}master.zip
  args:
    chdir: "{{ sourceFolder }}"

- name: Rename source folder
  command: mv {{ sourceFolder }}/{{ packageName }}master {{ sourceFolder }}/{{ packageName }}{{ sourceVersion }}
  args:
    chdir: "{{ sourceFolder }}"

- name: Change makefile
  replace:
    path: "{{ sourceFolder }}/peervpn-{{ sourceVersion }}/Makefile"
    backup: yes
    regexp: "/usr/local/sbin/peervpn"
    replace: "/usr/local/bin/peervpn"

- name: Prebild package
  shell: dh_make --createorig --single --yes
  args:
    chdir: "{{ sourceFolder }}/peervpn-{{ sourceVersion }}"

- name: Build package
  shell: dpkg-buildpackage -rfakeroot
  args:
    chdir: "{{ sourceFolder }}/peervpn-{{ sourceVersion }}"

- name: Create repo folder
  ignore_errors: yes
  become: yes
  file:
    path: "{{ repoFolder }}"
    state: directory
    mode: "0755"
  when: repo_folder_installed.stat.exists == False

- name: Move .deb package to repo folder
  shell: mv *.deb {{ repoFolder }}/
  args:
    chdir: "{{ sourceFolder }}"

- name: Change permissions
  become: yes
  file:
    path: "{{ repoFolder }}/peervpn_{{ sourceVersion }}-1_amd64.deb"
    mode: '0775'

- name: Create conf folder
  file:
    path: "{{ repoFolder }}/conf"
    state: directory
    mode: "0755"

- name: Create conf file
  file:
    path: "{{ repoFolder }}/conf/distributions"
    state: touch

- name: Write in distributions file
  blockinfile:
    path: "{{ repoFolder }}/conf/distributions"
    block: |
      Origin: Ubuntu
      Label: test
      Suite: unstable
      Codename: xenial
      Components: non-free
      Architectures: i386 amd64
      Description: test

      Origin: Ubuntu
      Label: test
      Suite: unstable
      Codename: bionic
      Components: non-free
      Architectures: i386 amd64
      Description: test

- name: Add 64 package xenial
  become: yes
  shell: sudo reprepro -b . includedeb xenial {{ repoFolder }}/peervpn_{{ sourceVersion }}-1_amd64.deb
  args:
    chdir: "{{ repoFolder }}"
  when: ansible_architecture == 'x86_64' and ansible_distribution_release == 'xenial'

- name: Add 32 package xenial
  become: yes
  shell: sudo reprepro -b . includedeb xenial {{ repoFolder }}/peervpn_{{ sourceVersion }}-1_i386.deb
  args:
    chdir: "{{ repoFolder }}"
  when: ansible_architecture == 'i386' and ansible_distribution_release == 'xenial'

- name: Add 64 package bionic
  become: yes
  shell: sudo reprepro -b . includedeb bionic {{ repoFolder }}/peervpn_{{ sourceVersion }}-1_amd64.deb
  args:
    chdir: "{{ repoFolder }}"
  when: ansible_architecture == 'x86_64' and ansible_distribution_release == 'bionic'

- name: Add 32 package bionic
  become: yes
  shell: sudo reprepro -b . includedeb bionic {{ repoFolder }}/peervpn_{{ sourceVersion }}-1_i386.deb
  args:
    chdir: "{{ repoFolder }}"
  when: ansible_architecture == 'i386' and ansible_distribution_release == 'bionic'

- name: add package apt xenial repository
  apt_repository:
    repo: deb [trusted=yes] http://localhost/package/ xenial non-free
    state: present
  when: ansible_distribution_release == 'xenial'

- name: add package apt bionic repository
  apt_repository:
    repo: deb [trusted=yes] http://localhost/package/ bionic non-free
    state: present
  when: ansible_distribution_release == 'bionic'

- name: Clean sourceFolder folder
  ignore_errors: yes
  become: yes
  shell: /bin/rm -rf *
  args:
    chdir: "{{ sourceFolder }}"
